name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, windows-latest, macos-13, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
        submodules: 'recursive'

      - name: Install linux dependencies
        if: matrix.os == 'ubuntu-24.04' || matrix.os == 'ubuntu-24.04-arm'
        run: |
          sudo apt update && sudo apt upgrade
          sudo apt install dolphin # Install packages required by Dolphin
          sudo apt install libxi-dev
          sudo apt install libegl1-mesa-dev
          sudo apt install ffmpeg
          sudo apt install libudev-dev
          sudo apt install libevdev-dev
          sudo apt install build-essential
          sudo apt install cmake
          sudo apt install git
          sudo apt install libavcodec-dev
          sudo apt install libavformat-dev
          sudo apt install libcurl4-openssl-dev
          sudo apt install libdbus-1-dev
          sudo apt install libglew-dev
          sudo apt install libgtk-3-dev
          sudo apt install libopenal-dev
          sudo apt install libreadline-dev
          sudo apt install libxrandr-dev
          sudo apt install libxi-dev
          sudo apt install libxinerama-dev
          sudo apt install libx11-dev
          sudo apt install libasound2-dev
          sudo apt install libpulse-dev
          sudo apt install libfreetype6-dev
          sudo apt install libfontconfig1-dev
          sudo apt install libpng-dev
          sudo apt install libjpeg-dev
          sudo apt install libz-dev
          sudo apt install libxext-dev
          sudo apt install libxrender-dev
          sudo apt install libglu1-mesa-dev
          sudo apt install libgtkglext1-dev
          sudo apt install libgtest-dev
          sudo apt install libgmp-dev
          sudo apt install liblz4-dev
          sudo apt install liblzma-dev
          sudo apt install libsnappy-dev
          sudo apt install libtinyxml2-dev
          sudo apt install libxi-dev
          sudo apt install libxrandr-dev
          sudo apt install libxinerama-dev
          sudo apt install libx11-xcb-dev
          sudo apt install libxcb-glx0-dev
          sudo apt install libxcb1-dev
          sudo apt install libxcb-dri3-dev
          sudo apt install libxcb-dri2-0-dev
          sudo apt install libxcb-xfixes0-dev
          sudo apt install libxcb-randr0-dev
          sudo apt install libxcb-keysyms1-dev
          sudo apt install libxcb-image0-dev
          sudo apt install libxcb-shape0-dev
          sudo apt install libxcb-xinerama0-dev
          sudo apt install libxcb-util-dev
          sudo apt install libxcb-icccm4-dev
          sudo apt install libxcb-keysyms1-dev
          sudo apt install libxcb-xkb-dev
          sudo apt install libxkbcommon-dev
          sudo apt install libxkbcommon-x11-dev


      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl