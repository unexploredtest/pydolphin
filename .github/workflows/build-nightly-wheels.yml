name: Build Nightly Wheels

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Setup Windows 10 SDK Action
        if: runner.os == 'Windows'
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v2.4
        with:
          sdk-version: 22621

      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update && sudo apt upgrade
          sudo apt install libxi-dev
          sudo apt install libegl1-mesa-dev
          sudo apt install ffmpeg
          sudo apt install libudev-dev
          sudo apt install libevdev-dev
          sudo apt install build-essential
          sudo apt install cmake
          sudo apt install git
          sudo apt install libavcodec-dev
          sudo apt install libavformat-dev
          sudo apt install libcurl4-openssl-dev
          sudo apt install libdbus-1-dev
          sudo apt install libglew-dev
          sudo apt install libgtk-3-dev
          sudo apt install libopenal-dev
          sudo apt install libreadline-dev
          sudo apt install libxrandr-dev
          sudo apt install libxi-dev
          sudo apt install libxinerama-dev
          sudo apt install libx11-dev
          sudo apt install libasound2-dev
          sudo apt install libpulse-dev
          sudo apt install libfreetype6-dev
          sudo apt install libfontconfig1-dev
          sudo apt install libpng-dev
          sudo apt install libjpeg-dev
          sudo apt install libz-dev
          sudo apt install libxext-dev
          sudo apt install libxrender-dev
          sudo apt install libglu1-mesa-dev
          sudo apt install libgtkglext1-dev
          sudo apt install libgtest-dev
          sudo apt install libgmp-dev
          sudo apt install liblz4-dev
          sudo apt install liblzma-dev
          sudo apt install libsnappy-dev
          sudo apt install libtinyxml2-dev
          sudo apt install libxi-dev
          sudo apt install libxrandr-dev
          sudo apt install libxinerama-dev
          sudo apt install libx11-xcb-dev
          sudo apt install libxcb-glx0-dev
          sudo apt install libxcb1-dev
          sudo apt install libxcb-dri3-dev
          sudo apt install libxcb-dri2-0-dev
          sudo apt install libxcb-xfixes0-dev
          sudo apt install libxcb-randr0-dev
          sudo apt install libxcb-keysyms1-dev
          sudo apt install libxcb-image0-dev
          sudo apt install libxcb-shape0-dev
          sudo apt install libxcb-xinerama0-dev
          sudo apt install libxcb-util-dev
          sudo apt install libxcb-icccm4-dev
          sudo apt install libxcb-keysyms1-dev
          sudo apt install libxcb-xkb-dev
          sudo apt install libxkbcommon-dev
          sudo apt install libxkbcommon-x11-dev

      - name: Setup gcc 12
        if: runner.os == 'Linux'
        run: |
          sudo apt install g++-12 gcc-12
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 100
          sudo update-alternatives --config gcc
          sudo update-alternatives --config g++

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Build Wheel
        run: |
          python setup.py bdist_wheel -DCMAKE_SYSTEM_VERSION="10.0.22621.0" -DSKIP_POSTPROCESS_BUNDLE=ON

      - name: Upload Wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ runner.os }}
          path: dist/*.whl